// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Recipe_GraphQL_Client.Data;

#nullable disable

namespace Recipe_GraphQL_Client.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230312024737_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Recipe_GraphQL_Client.Models.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6e67d1b0-5b77-4116-aba0-4260e0fc5852"),
                            Name = "Kristoffer Kirk"
                        },
                        new
                        {
                            Id = new Guid("49b0f447-bbee-4104-bfbb-f9020449914d"),
                            Name = "Gordon Ramsey"
                        });
                });

            modelBuilder.Entity("Recipe_GraphQL_Client.Models.Ingredient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RecipeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6e67d1b0-5b77-4116-aba0-4260e0fc5852"),
                            Name = "Egg",
                            Unit = ""
                        },
                        new
                        {
                            Id = new Guid("49b0f447-bbee-4104-bfbb-f9020449914d"),
                            Name = "Spaghetti",
                            Unit = "dl"
                        });
                });

            modelBuilder.Entity("Recipe_GraphQL_Client.Models.Recipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6e67d1b0-5b77-4116-aba0-4260e0fc5852"),
                            AuthorId = new Guid("6e67d1b0-5b77-4116-aba0-4260e0fc5852"),
                            Description = "A common classic from Italy!",
                            Title = "Spaghetti Carbonara"
                        },
                        new
                        {
                            Id = new Guid("49b0f447-bbee-4104-bfbb-f9020449914d"),
                            AuthorId = new Guid("49b0f447-bbee-4104-bfbb-f9020449914d"),
                            Description = "A perfect treat in the morning!",
                            Title = "Panncakes"
                        });
                });

            modelBuilder.Entity("Recipe_GraphQL_Client.Models.Ingredient", b =>
                {
                    b.HasOne("Recipe_GraphQL_Client.Models.Recipe", null)
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeId");
                });

            modelBuilder.Entity("Recipe_GraphQL_Client.Models.Recipe", b =>
                {
                    b.HasOne("Recipe_GraphQL_Client.Models.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Recipe_GraphQL_Client.Models.Recipe", b =>
                {
                    b.Navigation("Ingredients");
                });
#pragma warning restore 612, 618
        }
    }
}
